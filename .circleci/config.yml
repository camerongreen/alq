# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/php:7.1-apache-browsers
      - image: circleci/mysql:latest

    working_directory: ~/project

    services:
      - mysql

    steps:
      - checkout

      - run: sudo apt-get update && sudo apt-get upgrade
      - run: sudo apt-get install vim mysql-client libpng-dev nodejs nodejs-legacy npm

      - run:
          name: Start Xvfb
          command: |
            sudo Xvfb :7055
            export DISPLAY=:7055
          background: true
      - run:
          name: Start Selenium
          command: |
            sudo apt-get install -y default-jre
            wget http://selenium-release.storage.googleapis.com/2.53/selenium-server-standalone-2.53.1.jar -O selenium-server.jar
            java -jar selenium-server.jar
          background: true
      - run:
          name: PhantomJS install
          command: |
            sudo curl --output /usr/local/bin/phantomjs https://s3.amazonaws.com/circle-downloads/phantomjs-2.1.1

      - run:
          name: Install PHP MYSQL
          command: sudo docker-php-ext-install pdo_mysql

      - run:
          name: Install PHP GD
          command: sudo docker-php-ext-install gd

      -run: sudo service apache2 start

      # Copy the code base in
      - run: sudo cp -R /home/circleci/project/public_html/* /var/www/html/
      - run: sudo cp -R /home/circleci/project/public_html/.* /var/www/html/

      - run: cd /var/www/html

      # Get composer working.
      - run: php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
      - run: php composer-setup.php
      - run: php -r "unlink('composer-setup.php');"
      - run: php composer.phar self-update
      - run: sudo mv composer.phar /usr/local/bin/composer
      - run: sudo composer self-update

      - run: cp docker/config/composer.json .
      - run: composer install --prefer-dist

      - run: GIT_DIR=~/project ADMIN=testadmin DB_USER=root DB_NAME=circle_test DB_HOST=127.0.0.1 CIRCLECI=1 SITE_EMAIL=i@camerongreen.org ./scripts/create_site.sh

      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "composer.json" }}
        
      # run tests!
      - run: cd test && ./run-tests.sh
