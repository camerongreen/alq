<?php
/**
 * @file
 * Provides the ability to store, administer and email members of parliament
 */

include_once(drupal_get_path('module', 'alq_mps') . '/alq_mps_install.inc');

define('ALQ_ELECTORATES_TABLE', 'alq_electorates');
define('ALQ_NODE_REF_TABLE', 'field_data_field_parent_article');

$GLOBALS['mpsFields'] = [
  'id' => NULL,
  'name' => NULL,
  'family_name' => NULL,
  'given_names' => NULL,
  'preferred_name' => NULL,
  'title' => NULL,
  'qualifications' => NULL,
  'position' => NULL,
  'party' => NULL,
  'electorate' => NULL,
  'type' => NULL,
  'comments' => NULL,
  'created' => NULL,
  'changed' => NULL,
];

$GLOBALS['officeFields'] = [
  'id' => NULL,
  'electorate' => NULL,
  'type' => NULL,
  'state' => NULL,
  'address' => NULL,
  'postcode' => NULL,
  'email' => NULL,
  'phone' => NULL,
  'toll_free_phone' => NULL,
  'fax' => NULL,
  'created' => NULL,
  'changed' => NULL,
];

/**
 * Implements hook menu
 */
function alq_mps_menu() {
  $items['alq-mps'] = [
    'page callback' => 'alq_mps_search',
    'access callback' => 'user_access',
    'access arguments' => ['access email campaigns'],
  ];
  $items['alq-mps/details'] = [
    'page callback' => 'alq_mps_details',
    'access callback' => 'user_access',
    'access arguments' => ['access email campaigns'],
  ];
  return $items;
}





/**
 * Menu callback for mps search
 */
function alq_mps_search($search) {
  if (strlen($search) > 2) {
    $query = db_select(ALQ_MPS_TABLE, 'mps');
    $query->join(ALQ_ELECTORAL_OFFICES_TABLE, 'off', 'mps.electorate = off.electorate');
    $query->join(ALQ_ELECTORATES_TABLE, 'ele', 'mps.electorate = ele.state_district');
    $query->condition(
      db_or()
        ->condition('ele.locality', '%' . db_like($search) . '%', 'LIKE')
        ->condition('ele.postcode', db_like($search) . '%', 'LIKE')
    )
      ->fields('mps', [
        'id',
        'name',
        'party',
        'position',
        'title',
        'electorate',
      ])
      ->fields('ele', [
        'locality',
        'postcode'
      ]);
    $query->orderBy('ele.locality', 'ASC');
    $query->orderBy('ele.postcode', 'ASC');
    $query->groupBy('mps.id');
    $query->groupBy('ele.id');

    $result = $query->execute();

    drupal_json_output($result->fetchAll());
  }
  else {
    drupal_json_output([]);
  }
}

/**
 * Menu callback for mps details
 */
function alq_mps_details($id) {
  $query = db_select(ALQ_MPS_TABLE, 'mps');
  $query->join(ALQ_ELECTORAL_OFFICES_TABLE, 'off', 'mps.electorate = off.electorate');
  $query->condition(
    db_or()
      ->condition('mps.id', $id, '=')
  )
    ->fields('mps')
    ->fields('off');
  $query->orderBy('off.address', 'ASC');

  $result = $query->execute();

  return drupal_json_output($result->fetch());
}

/**
 * Menu callback for editing an individual mp
 */
function alq_mps_get($id) {
  $mp = node_load($id);
  return $mp;
}

function alq_mps_show_email_campaign($node) {
  if ($cid = alq_mps_has_email_campaign($node->nid)) {
    $cnode = node_load($cid);
    $form = drupal_get_form("alq_mps_email_form", $cnode);
    return drupal_render($form);
  }
}

function alq_mps_has_email_campaign($nid) {
  $query = db_select(ALQ_NODE_REF_TABLE, 'nrf');
  $query->condition(
    db_or()
      ->condition('nrf.entity_type', 'node', '=')
      ->condition('nrf.field_parent_article_nid', $nid, '=')
  )->fields('nrf', [
    'entity_id'
  ]);

  $result = $query->execute();

  return $result->fetchField(0);
}

function alq_mps_email_form($form, &$form_state, $cnode) {
  $form['id'] = [
    '#type' => 'hidden',
    '#required' => TRUE,
    '#default_value' => $cnode->nid,
  ];

  $form['search'] = [
    '#type' => 'fieldset',
    '#collapsible' => FALSE
  ];
  $form['search']['suburb'] = [
    '#type' => 'textfield',
    '#title' => t('Suburb or Post Code'),
    '#required' => TRUE,
    '#autocomplete_path' => 'alq-mps'
  ];

  $form['subject'] = [
    '#type' => 'textfield',
    '#title' => t('Subject'),
    '#required' => TRUE,
    '#default_value' => $cnode->title,
  ];
  $form['body'] = [
    '#type' => 'textarea',
    '#title' => t('Email text'),
    '#required' => TRUE,
    '#default_value' => $cnode->body[LANGUAGE_NONE][0]["value"],
  ];
  $form['name'] = [
    '#type' => 'textfield',
    '#title' => t('Your name'),
    '#required' => TRUE
  ];
  $form['email'] = [
    '#type' => 'textfield',
    '#title' => t('Your email'),
    '#required' => TRUE
  ];
  $form['spam'] = [
    '#type' => 'checkbox',
    '#title' => t('Would you like to join the Animal Liberation Qld email list'),
    '#required' => TRUE
  ];
  $form['submit'] = [
    '#type' => 'submit',
    '#value' => t('Send'),
  ];

  return $form;
}
