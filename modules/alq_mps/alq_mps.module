<?php
/**
 * @file
 * Provides the ability to store, administer and email members of parliament
 */

include_once(drupal_get_path('module', 'alq_mps') . '/alq_mps_install.inc');

define('ALQ_MPS_TABLE', 'alq_mps');
define('ALQ_ELECTORAL_OFFICES_TABLE', 'alq_electoral_offices');
define('ALQ_ELECTORATES_TABLE', 'alq_electorates');

/**
 * Implements hook menu
 */
function alq_mps_menu() {
  $items['alq-mps'] = array(
    'page callback' => 'alq_mps_search',
    'access callback' => 'user_access',
    'access arguments' => array('access email campaigns'),
  );
  $items['alq-mps/details'] = array(
    'page callback' => 'alq_mps_details',
    'access callback' => 'user_access',
    'access arguments' => array('access email campaigns'),
  );
  $items['admin/alq-mps'] = array(
    'page callback' => 'alq_mps_admin',
    'access callback' => 'user_access',
    'access arguments' => array('administer email campaigns'),
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function alq_mps_permission() {
  return array(
    'administer email campaigns' => array(
      'title' => t('Administer the email campaigns'),
    ),
    'access email campaigns' => array(
      'title' => t('Access email campaigns'),
    ),
  );
}

/**
 * Menu callback for mps search
 */
function alq_mps_search($search) {
  $query = db_select(ALQ_MPS_TABLE, 'mps');
  $query->join(ALQ_ELECTORAL_OFFICES_TABLE, 'off', 'mps.electorate = off.electorate');
  $query->join(ALQ_ELECTORATES_TABLE, 'ele', 'mps.electorate = ele.state_district');
  $query->condition(
    db_or()
      ->condition('ele.locality', '%' . db_like($search) . '%', 'LIKE')
      ->condition('ele.postcode', db_like($search) . '%', 'LIKE')
  )
    ->fields('mps', [
      'id',
      'electorate',
    ])
    ->fields('ele', [
      'locality',
      'postcode'
    ]);
  $query->orderBy('ele.locality', 'ASC');
  $query->orderBy('ele.postcode', 'ASC');

  $result = $query->execute();

  return drupal_json_output($result->fetchAll());
}

/**
 * Menu callback for mps details
 */
function alq_mps_details($id) {
  $query = db_select(ALQ_MPS_TABLE, 'mps');
  $query->join(ALQ_ELECTORAL_OFFICES_TABLE, 'off', 'mps.electorate = off.electorate');
  $query->condition(
    db_or()
      ->condition('mps.id', $id, '=')
  )
    ->fields('mps')
    ->fields('off');
  $query->orderBy('off.address', 'ASC');

  $result = $query->execute();

  return drupal_json_output($result->fetch());
}

/**
 * Menu callback for adminstering mps
 */
function alq_mps_admin() {
  // get the mps
  $query = db_select(ALQ_MPS_TABLE, 'mps');
  $num_rows = $query->countQuery()->execute()->fetchField();
  $num_per_page = 20;
  $page = pager_default_initialize($num_rows, $num_per_page);
  $offset = $num_per_page * $page;

  $query->fields('mps');
  $query->orderBy('mps.name', 'ASC');
  $query->range($offset, $num_per_page);
  $result = $query->execute();

  // output them in a paged table
  $rows = [];

  foreach ($result as $mp) {
    $rows[] = [
     $mp->id,
     $mp->name,
     $mp->party,
     $mp->electorate
    ];
  }

  $output = theme('table', [
    'header' => ['ID', 'Name', 'Party', 'Electorate'],
    'rows' => $rows
  ]);

  $output .= theme('pager');

  return $output;
}
