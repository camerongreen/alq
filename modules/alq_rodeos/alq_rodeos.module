<?php
/**
 * @file
 * Provides various functions for rodeos, refactor out if it starts getting
 * silly, into functional oriented modules
 */

define('ALQ_PLEDGES_TABLE', 'alq_pledges');

define('ALQ_RODEOS_CAMPAIGN_ID', '91');
define('ALQ_RODEOS_TAKE_ACTION_BLOCK', '2');
define('ALQ_RODEOS_EXPLAINER_BLOCK', '3');
define('ALQ_RODEOS_EMAIL_INTRO_BLOCK', '8');
define('ALQ_RODEOS_DONATION_EXPLAINER_BLOCK', '4');
define('ALQ_RODEOS_PLEDGE_INTRO_BLOCK', '10');


/**
 * Implements hook_block_info().
 */
function alq_rodeos_block_info() {
  return array(
    'alq_rodeos_email_member' => [
      'info' => t('ALQ Rodeos email member'),
    ],
    'alq_rodeos_pledge' => [
      'info' => t('ALQ Rodeos pledge'),
    ],
    'alq_rodeos_pledge_count' => [
      'info' => t('ALQ Rodeos pledge count'),
    ],
    'alq_rodeos_donation' => [
      'info' => t('ALQ Rodeos donation'),
    ],
    'alq_rodeos_footer' => [
      'info' => t('ALQ Rodeos footer'),
    ]
  );
}


/**
 * Implements hook_block_view().
 */
function alq_rodeos_block_view($delta = '') {
  $block = NULL;

  switch ($delta) {
    case 'alq_rodeos_email_member':
      $block = alq_rodeos_get_member_email_block();
      break;
    case 'alq_rodeos_donation':
      $block = alq_rodeos_get_donation_block();
      break;
    case 'alq_rodeos_footer':
      $block = alq_rodeos_get_footer_block();
      break;
    case 'alq_rodeos_pledge':
      $block = alq_rodeos_get_pledge_block();
      break;
    case 'alq_rodeos_pledge_count':
      $block = alq_rodeos_get_pledge_count_block();
      break;
  }

  return $block;
}

/**
 * Function to be called which shows the footer
 *
 * @return string
 */
function alq_rodeos_get_footer_block() {
  $block = [
    'content' => theme('alq_rodeos_footer', [])
  ];

  return $block;
}


/**
 * Function to be called which shows the pledge
 *
 * @return string
 */
function alq_rodeos_get_pledge_block() {
  $pledgeIntro = module_invoke('block', 'block_view', ALQ_RODEOS_PLEDGE_INTRO_BLOCK);
  $form = drupal_get_form('alq_rodeos_pledge_form');
  $pledgeForm = drupal_render($form);
  $block = [
    'content' => theme('alq_rodeos_pledge', [
      'pledge_intro_block' => $pledgeIntro['content'],
      'pledge_form' => $pledgeForm
    ])
  ];

  return $block;
}


/**
 * Function to be called which shows the pledge count
 *
 * @return string
 */
function alq_rodeos_get_pledge_count_block() {
  $query = db_select(ALQ_PLEDGES_TABLE, 'p')
      ->fields('p')
      ->execute();
  $pledgeCount = $query->rowCount();

  $block = [
    'content' => theme('alq_rodeos_pledge_count', [
      'pledge_count' => $pledgeCount,
    ])
  ];

  return $block;
}


/**
 * Function to be called which shows the form, loads up the JS etc libraries
 *
 * @return string
 */
function alq_rodeos_get_donation_block() {
  global $conf, $base_url;

  $explainerBlock = module_invoke('block', 'block_view', ALQ_RODEOS_DONATION_EXPLAINER_BLOCK);

  $paypalUrl = variable_get("uc_paypal_wpp_server", "https://api-3t.sandbox.paypal.com/nvp");

  if (stripos($paypalUrl, 'sandbox') === FALSE) {
    $url = 'https://www.paypal.com/cgi-bin/webscr';
    $business = $conf['paypal_id'];
  }
  else {
    $url = 'https://www.sandbox.paypal.com/cgi-bin/webscr';
    $business = $conf['paypal_email'];
  }

  $redirect_url_cancel = $base_url;
  $redirect_url = $base_url . '/thanks';

  $block = [
    'subject' => t($explainerBlock['subject']),
    'content' => theme('alq_rodeos_donation', [
      'explainer_block' => $explainerBlock['content'],
      'action' => $url,
      'business' => $business,
      'redirect_url' => $redirect_url,
      'redirect_url_cancel' => $redirect_url_cancel
    ])
  ];

  return $block;
}


/**
 * Function to be called which shows the form, loads up the JS etc libraries
 *
 * @return string
 */
function alq_rodeos_get_member_email_block() {
  $taBlock = module_invoke('block', 'block_view', ALQ_RODEOS_TAKE_ACTION_BLOCK);
  $emailIntroBlock = module_invoke('block', 'block_view', ALQ_RODEOS_EMAIL_INTRO_BLOCK);
  $explainerBlock = module_invoke('block', 'block_view', ALQ_RODEOS_EXPLAINER_BLOCK);
  $emailFormBlock = module_invoke('alq_mps', 'block_view', 'alq_mps_email_campaign_display');

  $block = [
    'subject' => t($taBlock['subject']),
    'content' => theme('alq_rodeos_email_member', [
      'take_action_block' => $taBlock['content'],
      'email_intro_block' => $emailIntroBlock['content'],
      'email_form' => $emailFormBlock['content'],
      'explainer_block' => $explainerBlock['content']
    ])
  ];

  return $block;
}

/**
 * Implements of hook_theme()
 */
function alq_rodeos_theme() {
  return [
    'alq_rodeos_email_member' => [
      'template' => 'theme/email-member-section',
      'variables' => [
        'take_action_block' => NULL,
        'email_intro_block' => NULL,
        'email_form' => NULL,
        'explainer_block' => NULL,
      ]
    ],
    'alq_rodeos_donation' => [
      'template' => 'theme/donation-section',
      'variables' => [
        'explainer_block' => NULL,
        'action' => NULL,
        'business' => NULL,
        'redirect_url' => NULL,
        'redirect_url_cancel' => NULL
      ]
    ],
    'alq_rodeos_pledge' => [
      'template' => 'theme/pledge-section',
      'variables' => [
        'pledge_intro_block' => NULL,
        'pledge_form' => NULL,
      ]
    ],
    'alq_rodeos_pledge_count' => [
      'template' => 'theme/pledge-count',
      'variables' => [
        'pledge_count' => NULL,
      ]
    ],
    'alq_rodeos_footer' => [
      'template' => 'theme/footer',
      'variables' => [
      ]
    ],
  ];
}

/**
 * Implementation of hook form
 *
 * @param $form
 * @param $form_state
 * @return mixed
 */
function alq_rodeos_pledge_form($form, &$form_state) {
  $classes = ['form-horizontal'];

  if (!isset($form['#attributes']['class'])) {
    $form['#attributes']['class'] = $classes;
  }
  else {
    $form['#attributes']['class'] = array_merge($form['#attributes']['class'], $classes);
  }

  $form['name'] = [
    '#type' => 'textfield',
    '#title' => t('Your name'),
    '#prefix' => '<div class="form-group">',
    '#suffix' => '</div>',
    '#required' => TRUE,
    '#attributes' => [
      'class' => ['form-control']
    ]
  ];
  $form['suburb'] = [
    '#type' => 'textfield',
    '#title' => t('Your suburb'),
    '#prefix' => '<div class="form-group">',
    '#suffix' => '</div>',
    '#required' => TRUE,
    '#attributes' => [
      'class' => ['form-control']
    ]
  ];

  $form['submit'] = [
    '#type' => 'submit',
    '#prefix' => '<div class="form-group">',
    '#suffix' => '</div>',
    '#value' => t('Pledge'),
    '#attributes' => [
      'class' => ['btn btn-primary']
    ]
  ];

  return $form;
}

/**
 * Implements hook_form_validate()
 *
 * @param $form
 * @param $form_state
 */
function alq_rodeos_pledge_form_validate($form, &$form_state) {
  /*
  $values = $form_state['values'];

  if (!valid_email_address($values['email'])) {
    form_set_error('email', t('Invalid email address.'));
  }
  */
}

/**
 * Implements hook_form_submit()
 *
 * @param $form
 * @param $form_state
 */
function alq_rodeos_pledge_form_submit($form, &$form_state) {
  $values = $form_state['values'];

  $insert = [
    'pledge' => 'rodeos',
    'name' => $values['name'],
    'suburb' => $values['suburb'],
    'created' => getBrizzyTime()
  ];

  if (drupal_write_record(ALQ_PLEDGES_TABLE, $insert)) {
    drupal_set_message('You successfully made your pledge');
    $_SESSION['alq_rodeos_pledge_form_submitted'] = TRUE;
  }
  else {
    drupal_set_message('Error making pledge, please Contact ALQ to let us know', 'error');
  }
}
